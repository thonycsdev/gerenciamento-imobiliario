// <auto-generated />
using System;
using GerenciamentoImobiliario.Data.Infra.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GerenciamentoImobiliario.Data.Infra.Migrations
{
    [DbContext(typeof(GerenciamentoImobiliarioDataContext))]
    partial class GerenciamentoImobiliarioDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Corretor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Corretores");
                });

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Imovel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDisponivel")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProprietarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Inquilino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ImovelAlugadoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ImovelAlugadoId");

                    b.ToTable("Inquilinos");
                });

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Locacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AlugadoAte")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CorretorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ImovelId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InquilinoId")
                        .HasColumnType("uuid");

                    b.Property<int>("StatusLocacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CorretorId");

                    b.HasIndex("ImovelId");

                    b.HasIndex("InquilinoId");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Proprietario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Proprietarios");
                });

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Imovel", b =>
                {
                    b.HasOne("GerenciamentoImobiliario.Domain.Entities.Proprietario", "Proprietario")
                        .WithMany("Imoveis")
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Inquilino", b =>
                {
                    b.HasOne("GerenciamentoImobiliario.Domain.Entities.Imovel", "ImovelAlugado")
                        .WithMany()
                        .HasForeignKey("ImovelAlugadoId");

                    b.Navigation("ImovelAlugado");
                });

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Locacao", b =>
                {
                    b.HasOne("GerenciamentoImobiliario.Domain.Entities.Corretor", "Corretor")
                        .WithMany("Locacoes")
                        .HasForeignKey("CorretorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciamentoImobiliario.Domain.Entities.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciamentoImobiliario.Domain.Entities.Inquilino", "Inquilino")
                        .WithMany()
                        .HasForeignKey("InquilinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corretor");

                    b.Navigation("Imovel");

                    b.Navigation("Inquilino");
                });

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Corretor", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("GerenciamentoImobiliario.Domain.Entities.Proprietario", b =>
                {
                    b.Navigation("Imoveis");
                });
#pragma warning restore 612, 618
        }
    }
}
